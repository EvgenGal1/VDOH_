// <parseTheme.scss()>˅=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=++=+=+=+=+=+=+=˅

// header-menu__bottom ()>˅=======================================================================================˅

.header-menu__bottom {
  // display: flex;
  // justify-content: flex-end;
  .header-menu-set {
    display: flex;
    justify-content: flex-end;
  }
  .menu-set__items {
    width: 100px;
    height: 40px;
    &:not(:first-child) {
      margin: 0 0 0px 30px;
    }
    &:first-child {
      display: none;
    }
  }
  .m-s-switcher {
    &-1,
    &-2,
    &-3,
    &-5 {
      // &-4,
      width: 100%;
      height: 100%;
    }
  }
}

// <m-s-switcher-0(бело серый)>˅=======================================================================================˅
// ! https://nisnom.com/veb-razrabotki/stilizovannye-pereklyuchateli-so-smenyayushhimisya-podpisyami/#more-1205
.m-s-switcher-0 {
  // font-family: helvetica neue, helvetica, arial, sans-serif;
  // font-size: 14px;
  // font-weight: 200;
  // padding: 50px;
  // background: #f6f6f6;
  *,
  *:before,
  *:after {
    transition: 0.25s ease-in-out;
  }

  $green: rgba(19, 191, 17, 1);
  $blue: #1fc1c8;

  h1 {
    font-size: 30px;
    text-align: center;
    padding: 0 0 25px 0;
    color: #606060;
  }

  .checkbox-label {
    display: block;
    position: relative;
    height: 20px;
    width: 72px;
    margin: 2px 0 0 0;
    border-radius: 50px;
    background: #f3f3f3;
    box-shadow: 0 0 0 2px #dddddd;
    .on {
      display: block;
      position: absolute;
      z-index: 0;
      left: 0;
      opacity: 1;
      min-width: 300px;
      line-height: 50px;
      opacity: 0;
      display: block;
      position: absolute;
      top: -25px;
      /* z-index: 0; */
      /* left: 0; */
      /* opacity: 1; */
      /* min-width: 300px; */
      /* line-height: 50px; */
      opacity: 0;
      color: #13bf11;
      color: $green;
    }
    .off {
      display: block;
      position: absolute;
      z-index: 0;
      right: 100px;
      text-align: right;
      opacity: 1;
      min-width: 300px;
      line-height: 50px;
      opacity: 1;
      color: #bbbbbb;
    }
    &:before {
      content: "";
      display: block;
      position: absolute;
      z-index: 1;
      top: 0;
      left: 0;
      border-radius: 50px;
      height: 20px;
      width: 40px;
      background: white;
      box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2), 0 0 0 2px #dddddd;
    }
  }

  .checkbox {
    position: absolute;
    left: -5000px;
    &:checked {
      + .checkbox-label {
        background: $green;
        box-shadow: 0 0 0 2px $green;
        .on {
          left: 100px;
          opacity: 1;
        }
        .off {
          right: 0px;
          opacity: 0;
        }
        &:before {
          left: 36px;
          box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2), 0 0 0 2px $green;
        }
      }
    }
  }

  .checkbox.blue {
    position: absolute;
    left: -5000px;
    + .checkbox-label {
      .on {
        color: $blue;
      }
    }
    &:checked {
      + .checkbox-label {
        background: $blue;
        box-shadow: 0 0 0 2px $blue;
        .on {
          left: 100px;
          opacity: 1;
        }
        .off {
          right: 0px;
          opacity: 0;
        }
        &:before {
          left: 30px;
          box-shadow: 0 3px 3px rgba(0, 0, 0, 0.2), 0 0 0 2px $blue;
        }
      }
    }
  }
}
//<.m-s-switcher-0(бело серый)>˄=======================================================================================˄

// <.m-s-switcher-1(черно зелёный)>˅=======================================================================================˅
// ! https://nisnom.com/veb-razrabotki/stilizovannye-chekboksy-i-radioknopki-na-css3/#more-700
.m-s-switcher-1 {
  /* $activeColor: #c0392b; //red */
  $activeColor: #27ae60; //green
  $darkenColor: darken($activeColor, 20%);
  /* $background: url('https://s3-us-west-2.amazonaws.com/s.cdpn.io/13460/dark_wall.png'); */
  $background: #3498db;
  background: #333;
  // margin: 20px auto;
  position: relative;
  border-radius: 50px;
  box-shadow: inset 0px 1px 1px rgba(0, 0, 0, 0.5),
    0px 1px 0px rgba(255, 255, 255, 0.2);
  &:after {
    content: "OFF";
    color: #000;
    position: absolute;
    right: 5px;
    top: 23%;
    z-index: 0;
    font: 17px/26px Arial, sans-serif;
    font-weight: bold;
    text-shadow: 2px 2px 0px rgba(255, 255, 255, 0.15);
  }
  &:before {
    content: "ON";
    color: $activeColor;
    position: absolute;
    left: 5px;
    top: 23%;
    z-index: 0;
    font: 17px/26px Arial, sans-serif;
    font-weight: bold;
    text-shadow: 2px 2px 0px (#000 / 0.15);
    text-shadow: 2px 2px 0px (rgb(0, 0, 0) / 15%);
    text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.75);
  }

  label {
    display: block;
    width: 54px;
    height: 34px;
    cursor: pointer;
    position: absolute;
    top: 3px;
    left: 3px;
    z-index: 1;
    background: #fcfff4;
    background: linear-gradient(top, #fcfff4 0%, #dfe5d7 40%, #b3bead 100%);
    border-radius: 50px;
    transition: all 0.4s ease;
    box-shadow: 0px 2px 5px 0px rgba(0, 0, 0, 0.3);
  }
  input[type="checkbox"] {
    visibility: hidden;
    &:checked + label {
      left: 43px;
    }
  }
}
//</.m-s-switcher-1(черно зелёный)>˄=======================================================================================˄

// <.m-s-switcher-2,3(черно белые)>˅=======================================================================================˅
// ! https://nisnom.com/veb-razrabotki/stilizovannye-chekboksy-s-krasivym-elastichnym-effektom/#more-3234
// .menu-set__items:nth-child(n + 3)
.m-s-switcher-2-3 {
  $black: #1e1e1e;
  $grey: #cccccc;
  $white: #ffffff;
  display: flex;
  .m-s-switchers {
    position: relative;
    width: 100px;
    height: 40px;
    border-radius: 25px;
    input {
      appearance: none;
      position: relative;
      width: 100px;
      height: 40px;
      border-radius: 25px;
      background-color: $black;
      outline: none;
      font-family: "Oswald", sans-serif;
      font: 17px/26px Arial, sans-serif;
      font-weight: bold;
      &:before,
      &:after {
        z-index: 2;
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
      }
      &:before {
        content: "ON";
        left: 10px;
        text-shadow: 0px 0px 15px rgba(204, 204, 204, 1);
      }
      &:after {
        content: "OFF";
        right: 10px;
        color: #ffffff;
        transition: color 0.5s 0.2s;
        text-shadow: 0px 0px 10px white;
      }
    }
    label {
      z-index: 1;
      position: absolute;
      top: 4px;
      bottom: 4px;
      border-radius: 20px;
    }
  }
  // }
  .m-s-switcher-2 {
    input {
      transition: 0.25s -0.1s;
      &:checked {
        background: #333;
        background-color: $white;
        &:before {
          color: $white;
          transition: color 0.5s 0.2s;
          text-shadow: 0px 0px 10px rgba(255, 255, 255, 1);
        }
        &:after {
          color: $white;
          transition: color 0.5s;
          text-shadow: 0px 0px 10px rgba(204, 204, 204, 1);
        }
        & + label {
          left: 4px;
          right: 45px;
          background: $black;
          transition: left 0.5s, right 0.4s 0.2s;
        }
      }
      &:not(:checked) {
        background: $black;
        transition: background 0.5s -0.1s;
        &:before {
          color: $black;
          transition: color 0.5s;
        }
        &:after {
          color: $black;
          transition: color 0.5s 0.2s;
          text-shadow: 1px 1px 0px rgba(204, 204, 204, 1);
        }
        & + label {
          left: 45px;
          right: 4px;
          background: $white;
          transition: left 0.4s 0.2s, right 0.5s, background 0.35s -0.1s;
        }
      }
    }
  }
  .m-s-switcher-3 {
    overflow: hidden;
    input {
      transition: background-color 0s 0.5s;
      &:before {
        color: $black;
      }
      &:after {
        color: $white;
      }
      &:checked {
        background-color: $white;
        &:before {
          transition: color 0.5s 0.2s;
          text-shadow: 0px 0px 10px #555555;
          text-shadow: 1px 1px 0px #cccccc;
        }
        &:after {
          color: $white;
          transition: color 0.5s 0.2s;
          text-shadow: 0px 0px 10px rgba(204, 204, 204, 1);
        }
        & + label {
          background: $white;
          animation: turn-on 0.5s ease-out;

          @keyframes turn-on {
            0% {
              left: 100%;
            }
            100% {
              left: 0%;
            }
          }
        }
      }
      &:not(:checked) {
        background: $black;
        & + label {
          background: $black;
          animation: turn-off 0.5s ease-out;

          @keyframes turn-off {
            0% {
              right: 100%;
            }
            100% {
              right: 0%;
            }
          }
        }
      }
    }
    label {
      top: 0px !important;
      width: 100px;
      height: 40px;
      border-radius: 25px;
    }
  }
}
//</.m-s-switcher-2,3(черно белые)>˄=======================================================================================˄

// <.m-s-switcher-4(NISNOM 1)>˅=======================================================================================˅
// ! https://nisnom.com/veb-razrabotki/krasivye-chekboksy-s-pomoshhyu-css/#more-1562
.m-s-switcher-4 {
  .toggle-button {
    position: relative;
    display: inline-block;
    color: #fff;
  }
  .toggle-button label {
    display: inline-block;
    text-transform: uppercase;
    cursor: pointer;
    text-align: left;
  }
  .toggle-button input {
    display: none;
  }
  .toggle-button__icon {
    cursor: pointer;
    pointer-events: none;
  }
  .toggle-button__icon:before,
  .toggle-button__icon:after {
    content: "";
    position: absolute;
    top: 45%;
    left: 35%;
    transition: 0.2s ease-out;
  }

  /*
   * Toggle button variables
   */
  /*
   * Toggle button styles
   */
  .toggle-button--aava label {
    height: 40px;
    line-height: 40px;
    transition: all 0.2s;
    border-radius: 2rem;
  }
  .toggle-button--aava label:before,
  .toggle-button--aava label:after {
    position: absolute;
    right: 1.5rem;
    transition: all 0.2s 0.1s ease-out;
  }
  .toggle-button--aava label:before {
    content: attr(data-on-text);
  }
  .toggle-button--aava label:after {
    content: attr(data-off-text);
  }

  .toggle-button--aava input[type="checkbox"] + label {
    width: 100px;
    background: #ff5335;
  }
  .toggle-button--aava input[type="checkbox"] + label:before {
    opacity: 0;
    transform: translate(0, 20px);
  }
  .toggle-button--aava input[type="checkbox"] + label:after {
    opacity: 1;
    transform: translate(0, 0);
  }

  .toggle-button--aava input[type="checkbox"]:checked ~ label {
    width: 100px;
    background: #61b136;
  }
  .toggle-button--aava input[type="checkbox"]:checked ~ label:before {
    opacity: 1;
    transform: translate(0, 0);
  }
  .toggle-button--aava input[type="checkbox"]:checked ~ label:after {
    opacity: 0;
    transform: translate(0, -20px);
  }

  .toggle-button--aava
    input[type="checkbox"]:checked
    ~ .toggle-button__icon:before {
    transform: translate(-10%, 100%) rotate(45deg);
    width: 16.66667px;
  }

  .toggle-button--aava
    input[type="checkbox"]:checked
    ~ .toggle-button__icon:after {
    transform: translate(30%) rotate(-45deg);
  }

  .toggle-button--aava .toggle-button__icon {
    position: absolute;
    left: 0;
    top: 0;
    height: 40px;
    width: 40px;
  }
  .toggle-button--aava .toggle-button__icon:before,
  .toggle-button--aava .toggle-button__icon:after {
    height: 3px;
    border-radius: 3px;
    background: #fff;
    box-shadow: 0 1px 0 rgba(0, 0, 0, 0.1);
  }
  .toggle-button--aava .toggle-button__icon:before {
    width: 25px;
    transform: rotate(45deg);
  }
  .toggle-button--aava .toggle-button__icon:after {
    width: 25px;
    transform: rotate(-45deg);
  }
}
//</.m-s-switcher-4(NISNOM 1))>˄=======================================================================================˄

// <.m-s-switcher-5(3 позиции - горизонт)>˅=======================================================================================˅
// ! https://habr.com/ru/sandbox/80843/
.m-s-switcher-5 {
  .switcher {
    position: relative;
    display: inline-block;
    // margin: 1px 10px;
    height: 40px;
    width: 100px;
    z-index: 1;
  }

  .switcher-off {
    left: 3px;
    width: 33%;
    height: 100%;
  }

  .switcher-neutral {
    left: 31%;
    width: 33%;
    height: 100%;
  }

  .switcher-on {
    right: 3px;
    width: 33%;
    height: 100%;
  }

  .switcher-label {
    position: absolute;
    /* text-indent: -9999px; */
    /* z-index: 2; */
    display: flex;
    /* left: 5px; */
    align-items: center;
    justify-content: center;
  }

  .switcher input {
    visibility: hidden;
    position: absolute;
  }

  .switcher-slider {
    height: 100%;
    width: 100%;
    border-radius: 25px;
    box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1) inset,
      0 0 4px rgba(0, 0, 0, 0.5) inset, 0 2px 2px 1px rgba(0, 0, 0, 0.3) inset;
    box-shadow: 0 0 3px #555555 inset, 0 0 10px black;
    left: 33%;
    transition: background-color 0.2s linear 0s;
  }

  .switcher-slider:after {
    transition: left 0.2s linear 0s, right 0.2s linear 0s;
    background: linear-gradient(#d0d0d0, #fdfdfd) repeat scroll 0 0
      rgba(0, 0, 0, 0);
    content: "";
    position: absolute;
    top: 3px;
    border-radius: 50%;
    width: calc(100% / 3 - 1px);
    width: 34px;
    height: calc(100% - 2px);
    height: 34px;
    box-shadow: 0 0 1px 1px #f4f4f4 inset, 0 0 3px 1px rgba(0, 0, 0, 0.6);
  }

  //
  .switcher-radio-on:checked ~ .switcher-slider {
    background-color: #81ea89;
  }

  .switcher-radio-neutral:checked ~ .switcher-slider {
    background: #ddd;
  }

  .switcher-radio-off:checked ~ .switcher-slider {
    background-color: #ed8282;
  }

  .switcher-radio-on:checked ~ .switcher-slider:after {
    left: calc(2 * ((100% - 6px) / 3));
  }

  .switcher-radio-neutral:checked ~ .switcher-slider:after {
    left: calc(1px + 100% / 3);
  }

  .switcher-radio-off:checked ~ .switcher-slider:after {
    left: 3px;
  }
}
//</.m-s-switcher-5(3 позиции - горизонт)>˄=======================================================================================˄

// <.m-s-switcher-6()>˅=======================================================================================˅
.m-s-switcher-6 {
}
//</.m-s-switcher-6()>˄=======================================================================================˄

// <.m-s-switcher-7(3 позиции - круг)>˅=======================================================================================˅
//! https://codepen.io/PaulZi/pen/zBbVvV?editors=1100
.m-s-switcher-7 {
  .tristate {
    position: relative;
    display: inline-block;

    // циферблат > стрелка
    i {
      position: relative;
      display: inline-block;
      width: 40px;
      height: 40px;
      background-color: #ccc;
      border-radius: 50%;
      box-shadow: 3px 3px 5px rgba(0, 0, 0, 0.3),
        inset 1px 1px 2px rgba(255, 255, 255, 0.4),
        inset -1px -1px 2px rgba(0, 0, 0, 0.4);
      &,
      &:before,
      &:after {
        transition: all 0.3s;
      }
      // точки тенью
      &:before {
        content: " ";
        display: block;
        position: absolute;
        left: 30%;
        top: 30%;
        width: 40%;
        height: 40%;
        border-radius: 50%;
        box-shadow: -30px 0 0 $DullGray, 0 30px 0 $DullGray, 30px 0 0 $DullGray;
      }
      // стрелка
      &:after {
        content: " ";
        display: block;
        position: absolute;
        top: calc(50% - 1px);
        left: 0;
        width: 50%;
        border-bottom: solid 3px #666;
        transform-origin: 20px 50%;
      }
    }

    // label. знаки и их расположения
    label {
      position: absolute;
      left: -40%;
      top: 33%;
      width: 30%;
      height: 30%;
      display: inline-block;
      background-color: #ffa600;
      text-align: center;
      border-radius: 50px;
      & + label {
        left: calc(50% - 6px);
        top: calc(100% + 1px);
        & + label {
          right: -40% !important;
          left: 110%;
          top: 33%;
        }
      }
    }

    // ??? не раб - разобратся как работает такая вложенность
    // изменения при нажатии (:checked)
    & > input[type="radio"] {
      position: absolute;
      left: 0;
      top: 0;
      width: 40px;
      height: 40px;
      margin: 0;
      padding: 0;
      opacity: 0;

      &:first-child {
        z-index: 10;
        &:checked {
          z-index: 0;
        }
      }

      // изменения в label при нажатии
      // ??? не раб - разобратся как работает такая вложенность
      // начальная позиция на .item3-state-off attr checked в -90'град
      &:checked {
        & + input[type="radio"] {
          z-index: 10;
        }
        // третье положение
        & + i {
          background-color: #0f0;
          & + label,
          & + label + label {
            background: none;
          }
        }
        // второе положение
        & + input[type="radio"] {
          & + i {
            background-color: #ff0;
            & + label,
            & + label + label + label {
              background: none;
            }
          }
          // первое положение
          & + input[type="radio"] {
            & + i {
              background-color: #f00;
              & + label + label,
              & + label + label + label {
                background: none;
              }
            }
          }
        }
      }
      // изменения в label при нажатии
      // ??? не раб - разобратся как работает такая вложенность
      // начальная позиция на .item3-state-off attr checked в -90'град
      &:checked {
        // третье положение?
        & + i {
          &:after {
            transform: rotate(-180deg);
          }
        }
        // второе положение?
        & + input[type="radio"] {
          & + i {
            &:after {
              transform: rotate(-90deg);
            }
          }
          // первое положение?
          & + input[type="radio"] {
            & + i {
              &:after {
                transform: rotate(0deg);
              }
            }
          }
        }
      }
    }
  }
}
//</.m-s-switcher-7(3 позиции - круг)>˄=======================================================================================˄

// <.m-s-switcher-()>˅=======================================================================================˅
// ! https://nisnom.com/veb-razrabotki/pure-css-toggle-buttons-on-off-switches/#more-3247
//</.m-s-switcher-()>˄=======================================================================================˄

// ! 1 варик
// <html>
// <head>
// <script type="text/javascript">
// window.onload = function() {
//     document.getElementById('SuperButton').onclick = function()
//     {
//         if(document.body.className != 'new_class')
//         {
//             document.body.className = 'new_class';
//         }
//         else
//         {
//             document.body.className = '';
//         }
//     }
// }
// </script>
// <style>
// body { background: #23ff0c; min-height: 100%; }
// .new_class { background: #FF0; }

// </style>
// </head>
// <body>
// <button id="SuperButton" name="SuperButton">Super Button</button>
// </body>
// </html>

// ! 2 варик
// body.style1 {background:#fff}
// body.style1 a{color:#cc0000;}

// body.style2 {background:#000}
// body.style2 a{color:#ccc;}
// и по клику на кнопку манипулируют этим классом, а все стили в одном файле

// интересно, допустим у меня есть 2 класса для body (body1, body2), а вот кнопку как такую написать я не представляю

// $('changeStyleButton').click(function(){ $('body').addClass('style2'); });

// ! 3 варик
//function to append a new theme stylesheet with the new style changes
// function updateCSS(locStr){
//   $("link[href*=parseTheme\\.css\\.php]:last").after('<link href="/themeroller/css/parseTheme.css.php?'+ encodeURIComponent( locStr ) +'" type="text/css" rel="Stylesheet" />');
//   if($("link[href*=parseTheme\\.css\\.php]").size() > 3){
//       $("link[href*=parseTheme\\.css\\.php]:first").remove();
//   }
// };

// Т.е. это фактически ответ @inferus-vv, только здесь jquery использован, здесь он просто для удобства...

// Работает в опере, хроме, сафари, лисе, и даже в ie. еще на андроиде в стоковом браузере тоже работает.

// ! 4 варик
// Добавьте аттрибут id элементу link который rel="stylesheet"
// В скрипте находите этот элемент и меняйте ему аттрибут href
// Страница перезагружаться естественно не будет, но таблица стилей загрузится.

// А вообще это убого при наличии поддержки rel="alternate stylesheet".

// Поделиться
// Улучшить ответ
// Отслеживать
// ответ дан 9 апр '12 в 10:15

// karmadro4
// 2,38711 золотой знак1212 серебряных знаков1515 бронзовых знаков
// моих знаний JS хватило только на <html> <body> <script type="text/javascript"> function color(c) {document.body.style.backgroundColor=c} </script> <input type='button' value='красный фон' onclick='color("red")'> <input type='button' value='черный фон' onclick='color("black")'> </body> </html> – sergey 9 апр '12 в 10:41
// @mixalef, нет-нет, я предлагал сменить URL "главной" таблицы стилей.

// !!! https://javascript.ru/forum/misc/80255-smena-stilejj-nazhatiem-na-knopku.html

// ! 5 варик

// !!! http://blogprogram.ru/poluchit-naznachit-css-stil-v-jquery/

// Пример: получить CSS стиль всех параграфов:
// $("p").css('marginTop');
// $("p").css('background-color');

// Как это можно использовать? например, определить цвет заливки при клике на пункт и назначить его какому-то div-у.

// Пример: кликните по одному из этих 3-х пунктов ниже и цвет скопируется в новый div

// Меркурий
// Венера
// Земля
// Новый цвет
// Скрипт данного примера:

// <ul id="list">
// <li class="item" style="background-color: #567328">Меркурий</li >
// <li class="item" style="background-color: #9CEB1F">Венера</li >
// <li class="item" style="background-color: #EBDB1F">Земля</li >
// </ul>
// <script>
// $(document).ready(function(){
// $("#list .item").click(function () {
// var color = $(this).css("background-color");
// $("#result").css("background-color", color );
// $("#results").val(color ); }); });
// </script>

// Назначить CSS элементу
// $(".topBlock").css("top", "5px") установит смещение по вертикали равным 5px
// $(".topBlock").css({"top":"5px", "background-color":"red"}) установит смещения по вертикали и красную заливку

// Назначить несколько стилей элементу:
// $("div").css({ border:"1px solid blue", fontWeight:"bolder", backgroundColor:"red" });

// Скачать рабочий скрипт данного примера
// cvet.zip в /Своё.Нэт

// ! 6 варик

// !!! http://blogprogram.ru/kak-izmenit-css-elementa-cherez-jquery/

// КАК ИЗМЕНИТЬ CSS ЭЛЕМЕНТА ЧЕРЕЗ JQUERY
// Категория: JQuery • 16th Декабрь 2018
// 527
// Бывают ситуации, когда нужно изменить стиль html элемента на лету, без перезагрузки страницы. Например, при нажатии на кнопку или только на определенной странице. Сделать это очень просто с помощью jQuery.

// Предлагаю использовать не стандартный подход к данной задачи, а именно - мы будем менять css используя атрибут style в jQuery.

// Предположим у нас есть элемент:
// <style>.myhtml {color: red;}</style>
// <div class="myhtml">какое-то содержимое</div>

// Давайте изменим на лету его цвет на зеленый и выделим его жирным:

// <script type="text/javascript">
// $(document).ready(function(){
// $(".myhtml").attr('style', 'color: green; font-weight: bold;');
// });
// </script>

// Как вы видите этот код срабатывает только после загрузки страницы и назначает атрибуту style класса .myhtml новые стили. В них можно даже писать !important; для приоритетности.

// Если же нам нужно было бы изменить стиль по клику на сам элемент, то код был бы таким:

// <script type="text/javascript">
// $(document).ready(function(){
// $(".myhtml").click(function(){
// $(".myhtml").attr('style', 'color: green; font-weight: bold;');
// });
// });
// </script>

// Примерно так работают скрипты сайтов, которые предлагают пользователю на лету изменить цветовую схему сайта. А если подумать, то на этом же принципе можно легко сделать версию для слабовидящих (главное прикрутить скрипт куков, которые бы запоминали состояние переменных).

// Если же нам нужно изменить css только на определенной странице, то используйте этот код:

// <script type="text/javascript">
// $(document).ready(function(){
// var pathes = window.location.pathname + window.location.search;
// if(pathes == '/about/') {
// $(".myhtml").attr('style', 'color: green; font-weight: bold;'); }
// });
// </script>

// Переменная pathes определяет текущую относительную ссылку сайта. Если она равна '/about/', то скрипт сработает только на этой странице. Данный метод удобен, если нам нужно делать какие-то исключения на определенных страницах.

// В заключении скажу, что стандартный подход изменения css заключается в использовании метода jQuery.css(). В нем тоже есть свои особенности и знать его нужно всегда.

//</parseTheme.scss()>˄=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=+=˄
